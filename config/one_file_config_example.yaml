global_planner:
  map_config_file: "catkin_ws/src/larics_motion_planning/config/one_file_config_example.yaml"
  trajectory_config_file: "catkin_ws/src/larics_motion_planning/config/one_file_config_example.yaml"
  path_planner_config_file: "catkin_ws/src/larics_motion_planning/config/one_file_config_example.yaml"
  state_validity_checker_config_file: "catkin_ws/src/larics_motion_planning/config/one_file_config_example.yaml"
  kinematics_config_file: "catkin_ws/src/larics_motion_planning/config/one_file_config_example.yaml"

  trajectory:
    restarts: 5

  path_and_trajectory:
    restarts: 5

  path:
    restarts: 5
    collision_check_restarts: 5
    collision_check: true

  parabolic_airdrop:
    # Parabola family parameters.
    # d is dropoff distance projected onto xy plane
    d: [4.0, 3.0, 2.0, 3.5, 1.5, 4.0, 1.0, 4.5, 5.0, 5.5, 6.0]
    # v is linear speed of the projectile in airdrop direction
    v: [4.5, 3.0, 2.0, 3.5, 1.5, 4.0, 1.0, 4.5, 5.0, 5.5, 6.0]
    # alpha is angle at which the projectile is launched
    alpha: [0.0, 25.0, 15.0, 30.0, 10.0, 5.0, 0.0, 35.0, 40.0, 45.0]
    # We search for all 360 degrees for the direction of parabola. This 
    # parameter defines increment in degrees
    yaw_increment: 90 #22.5
    # Maximum difference in height between dropoff and final parabola point.
    # Candidates with larger difference will be discarded.
    max_dz: 50
    # Parabola is planned for payload which is typically below the vehicle.
    # That's why we have offset in z-axis while planning the trajectory for
    # the uav.
    payload_z_offset: 0.1

    # Stopping trajectory parameters [x, y, z, yaw]
    stopping_velocity: [8, 8, 3, 2]
    stopping_acceleration: [5.0, 5.0, 1.5, 2.0]
    use_horizontal_stopping_acceleration: false
    horizontal_stopping_acceleration: 4.0
    # Dropoff trajectory parameters [x, y, z, yaw]
    max_line_integral: 5.0
    dropoff_velocity: [8, 8, 3, 2]
    dropoff_acceleration: [5, 5, 1.5, 2.0]
    use_horizontal_dropoff_acceleration: false
    horizontal_dropoff_acceleration: 2.0
    # Common for both trajectories is acceleration between dropoff and stopping
    # trajectories. The idea is to have a positive z-direction acceleration so
    # the uav does not interact with dropped object. [x, y, z, yaw]
    intermediate_acceleration: [0, -1, 0, 0]
    use_horizontal_intermediate_acceleration: false
    horizontal_intermediate_acceleration: 1.0

    spline_sampling_time: 0.01

octomap:
  path_to_file: "catkin_ws/src/larics_gazebo_worlds/models/greenhouse/greenhouse4096.binvox.bt"
  search_depth: 16

path_planner:
  spaces:
    number: 4
    dimensions: [6, 5, 1, 3]
    weights: [1.0, 1.0, 0.5, 1.0]
    types: ["RealVector", "RealVector", "SO2", "SO3"]
    bounds: [[[0, 10.0], [-20.0, 0.0], [0.2, 1.0], [0.0, 0.0], [0.0, 0.0], [-3.15, 3.15]], [[-1.57, 1.57], [-1.57, 1.57], [-1.57, 1.57], [-1.57, 1.57], [-1.57, 1.57]], [[-3.1415, 3.1415]], [[-3.1415, 3.1415]]]
    #bounds: [[[0, 10.0], [-20.0, 0.0], [0.95, 1.05]], [[-1.57, 1.57], [-1.57, 1.57], [-1.57, 1.57]]]
  longest_valid_segment:
    is_used: true
    is_metric: true
    value: 0.01
  goal_bias:
    is_used: true
    value: 0.05
  range:
    is_used: true
    value: 0.5
  rewire_factor:
    is_used: false
    value: 1.1
  delay_cc:
    is_used: true
    value: true
  tree_pruning: 
    is_used: true
    value: false
  prune_threshold:
    is_used: true
    value: 0.1
  pruned_measure:
    is_used: true
    value: false
  k_nearest:
    is_used: true
    value: true
  solve_time:
    is_incremental: false
    time: 5.0
    increment: 0.25
  path_simplifier:
    reduce_vertices:
      is_used: false
      max_steps: 0.25
      max_empty_steps: 0
      range_ratio: 0.33
      use_as_fraction: true
    smooth_b_spline:
      is_used: false
      max_steps: 5

toppra_trajectory:
  velocities: [2.0, 2.0, 0.5, 100, 100, 0.3, 1.0, 1.0, 1.0, 1.0, 1.0, 0.3, 1.0, 1.0, 1.0]
  accelerations: [1.4, 1.4, 0.4, 100, 100, 0.3, 1.2, 1.2, 1.2, 1.2, 1.2, 0.3, 1.2, 1.2, 1.2]
  is_angular: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
  sampling_frequency: 100.0

state_validity_checker:
  type: "point"
  uav_wp_manipulator:
    manipulator_link_dimensions: [[0.0340, 0.1225, 0.0285], [0.1365, 0.0340, 0.0285], [0.0755, 0.0285, 0.0340], [0.0725, 0.0285, 0.0340], [0.0453, 0.0285, 0.0340]]
    manipulator_link_directions: ["y", "x", "x", "x", "x"]

    uav_dimensions: [0.4, 0.4, 0.17]

    uav_manipulator_transform: [0, 0, 0.075, 1.57079632679, 0, 3.14159265359]

    checker_resolution:
      manipulator: 0.01
      uav: 0.03

    tool:
      use_tool: true
      dimensions: [0.3453, 0.01, 0.01]
      direction: "x"

kinematics:
  wp_manipulator_kinematics:
    robot_model_name: "wp_manipulator"
    joint_group_name: "wp_manipulator_arm"
    dh_parameters_file: "catkin_ws/src/aerial_manipulators/aerial_manipulators_control/config/wp_manipulator_dh_parameters.yaml"