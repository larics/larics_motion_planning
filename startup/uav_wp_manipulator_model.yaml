name: uav_wp_manipulator_model
root: ./
startup_window: roscore
pre_window: cd ~/; export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:$HOME/uav_ws/src/larics_gazebo_worlds/models
windows:
  - roscore_gazebo:
      layout: tiled
      panes:
        - roscore
        - waitForRos; roslaunch gazebo_ros empty_world.launch use_sim_time:=true paused:=false
        - >
          waitForSimulation; 
          roslaunch larics_gazebo_worlds spawn_factory.launch
  - uavs:
      layout: tiled
      panes:
        - > #UAV
          waitForSimulation; sleep 5; 
          roslaunch mmuav_gazebo uav_attitude_position.launch start_gazebo:=false x:=0.0 y:=-7.0 z:=1.0 manipulator_type:="wp_manipulator" manipulator_tool:="rod_with_camera" collision_bitmask:=1 start_trajectory_dequeue:=true
        - > # Model uav if needed
          waitForSimulation; sleep 5; 
          roslaunch mmuav_gazebo uav_attitude_position.launch start_gazebo:=false name:="model_uav" x:=0.0 y:=-7.0 z:=1.0 manipulator_type:="wp_manipulator" manipulator_tool:="rod_with_camera" collision_bitmask:=2 start_trajectory_dequeue:=true
  - planning:
      layout: tiled
      panes:
        - >
          waitForRos; sleep 5; 
          roslaunch wp_manipulator planning_context.launch; 
          roslaunch larics_motion_planning arducopter_wp_manipulator.launch
        - > # Move the aerial manipulator and model to starting configuration
          waitForSimulation; sleep 15;
          rostopic pub --once /uav/go_to/full_state_ref std_msgs/Float64MultiArray "layout:
            dim:
            - label: ''
              size: 0
              stride: 0
            data_offset: 0
          data: [0,-7,1,0,0,0,0.787, 0.787, 0.787, -1.57, 0.787]";
          rostopic pub --once /model_uav/go_to/full_state_ref std_msgs/Float64MultiArray "layout:
            dim:
            - label: ''
              size: 0
              stride: 0
            data_offset: 0
          data: [0,-7,1,0,0,0,0.787, 0.787, 0.787, -1.57, 0.787]"
        - | # Simple example of just moving forward with model corrections
          history -s "rosservice call /uav/model_correction_trajectory \"waypoints:
            header:
              seq: 0
              stamp: {secs: 0, nsecs: 0}
              frame_id: ''
            joint_names: ['']
            points:
            - positions: [0,-7,1,0,0,0,0.787, 0.787, 0.787, -1.57, 0.787]
              velocities: [0]
              accelerations: [0]
              effort: [0]
              time_from_start: {secs: 0, nsecs: 0}
            - positions: [2,-7,1,0,0,0,0.787, 0.787, 0.787, -1.57, 0.787]
              velocities: [0]
              accelerations: [0]
              effort: [0]
              time_from_start: {secs: 0, nsecs: 0}
          publish_path: false
          publish_trajectory: true
          plan_path: false
          plan_trajectory: true
          override_dynamic_constraints: false
          velocity_constraints: [0]
          acceleration_constraints: [0]\""
  - logging:
      layout: tiled
      panes:
        - |
          if [ ! -d "$HOME/bags/uav_manipulator_model" ];
          then
            mkdir $HOME/bags/uav_manipulator_model;
          fi;
          cd ~/bags/uav_manipulator_model;
          history -s "rosbag record -a --chunksize=64 -x \"/(.*)(gazebo|camera|bias|joint_states|parameter_descriptions|parameter_updates|motor_speed)(.*)\" -o uav_manipulator_model"