name: empty_world_airdrop
root: ./
startup_window: roscore
pre_window: |
  cd ~/; 
  export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:$HOME/uav_ws/src/larics_gazebo_worlds/models;
  if [[ -z "${AIRDROP_TYPE}" ]];
    then export AIRDROP_TYPE=empty
  fi
windows:
  - roscore_gazebo:
      layout: tiled
      panes:
        - roscore
        - waitForRos; roslaunch gazebo_ros empty_world.launch use_sim_time:=true paused:=false
        - |
          waitForSimulation; sleep 5;
          if [ "$AIRDROP_TYPE" == "bucket" ];
            then roslaunch larics_gazebo_worlds spawn_bucket.launch;
            else exit
          fi
  - uav:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mmuav_gazebo uav_attitude_position.launch mount_magnet:=true z:=1 start_gazebo:=false
  - motion_planning:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch larics_motion_planning parabolic_airdrop.launch
        - history -s "rosservice call /uav/spawn_ball \"{}\""
        - |
          history -s "rostopic pub -1 /uav/go_to/reference geometry_msgs/Pose \"position:
            x: -8.0
            y: 0.0
            z: 5.0
          orientation:
            x: 0.0
            y: 0.0
            z: 0.0
            w: 1.0\""
        - |
          history -s "rosservice call /uav/parabolic_airdrop_trajectory \"uav_pose:
            position: {x: -8.0, y: 0.0, z: 5.0}
            orientation: {x: 0.0, y: 0.0, z: 0.0, w: 1.0}
          target_pose:
            position: {x: 0.0, y: 0.0, z: 0.1}
            orientation: {x: 0.0, y: 0.0, z: 0.0, w: 0.0}
          publish_path: false
          publish_trajectory: true
          plan_path: false
          plan_trajectory: true
          use_custom_parabola_params: false
          custom_parabola_params: [0]
          use_custom_psi_params: false
          custom_psi_params: [0]\""
  - logging:
      layout: tiled
      panes:
        - |
          cd ~/bags/parabolic_airdrop;
          history -s "rosbag record -a -x \"/(.*)(gazebo|camera|bias|joint_states|parameter_descriptions|parameter_updates)(.*)\" -o parabolic_airdrop"